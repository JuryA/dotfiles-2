" This came from Greg V's dotfiles:
"      https://github.com/myfreeweb/dotfiles
" Feel free to steal it, but attribution is nice
"
" Thanks:
" http://bitbucket.org/sjl/dotfiles
" https://github.com/daveray/vimfiles
" https://github.com/erynofwales/dotfiles
" https://github.com/rmurphey/dotfiles
" https://github.com/holman/dotfiles
" https://github.com/spf13/spf13-vim
" https://github.com/garybernhardt/dotfiles
" https://github.com/mutewinter/dot_vim
" https://github.com/terryma/dotfiles

let windows = has('win32') || has('win64')
let mac = has('mac')

if windows
  set runtimepath+=~/.vim
end
set nocompatible
source ~/.vim/bundles.vim
syntax on

" basics
set noswapfile backup undofile undoreload=5000 history=500
set noequalalways
set wrapscan incsearch ignorecase smartcase
if has('unnamedplus')
  set clipboard^=unnamedplus
endif
if mac || windows
  set clipboard=unnamed
endif
set autoread autowrite
set magic
set nojoinspaces
set modelines=3
set synmaxcol=500 " don't highlight minified js and stuff
set switchbuf=usetab
set gdefault

" formatting
set nowrap
set noexpandtab " http://lea.verou.me/2012/01/why-tabs-are-clearly-superior/
set tabstop=2 shiftwidth=2 softtabstop=2
set autoindent smartindent
set encoding=utf-8 nobomb
set whichwrap+=<,>,[,]
set virtualedit=block

" ui
if !has('gui_running')
  set t_Co=256
endif
set notimeout ttimeout ttimeoutlen=10
set relativenumber
set hlsearch
set backspace=indent,eol,start
set noerrorbells
set noshowmode
set showbreak=↪
if !windows
  set list listchars=tab:▸\ ,eol:¬,extends:❯,precedes:❮,nbsp:␣
  set fillchars=diff:⣿,vert:│
end
if !has('nvim')
  set ttyfast
end
set lazyredraw title
"set cursorline
set hidden
set mouse=a
set shortmess=filtIoOA
set laststatus=2
set nostartofline
set visualbell
set showmatch
set mat=5
set virtualedit=onemore
set viewoptions=folds,options,cursor,unix,slash
set t_ti= t_te= " http://www.shallowsky.com/linux/noaltscreen.html

" completion
set wildmenu wildmode=list:longest,list:full
set wildignore+=.hg,.git,.bzr,.svn                 " Version control
set wildignore+=*.aux,*.out,*.toc                  " LaTeX intermediate files
set wildignore+=*.jpg,*.bmp,*.gif,*.png,*.jpeg     " binary images
set wildignore+=*.luac,*.pyc,*.rbc,*.class,classes " Byte code and stuff
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest   " compiled object files
set wildignore+=*.spl                              " compiled spelling word lists
set wildignore+=*.sw?                              " Vim swap files
set wildignore+=.DS_Store,Thumbs.db                " Shit
set wildignore+=target                             " JVM compiled stuff
set wildignore+=node_modules,build,.cabal-sandbox,.hpc

" paths
if !windows
  set shell=zsh
  set formatprg=par\ -eq
  set tags=tags;/,codex.tags;/
  set dictionary=/usr/share/dict/words
  set backupskip=/tmp/*,/private/tmp/*
end
set backupdir=~/.vim/tmp/backups/
set undodir=~/.vim/tmp/undo/

" ////////////////////////////

digraph CC 8450
digraph NN 8469
digraph QQ 8474
digraph RR 8477
digraph ZZ 8484
digraph .. 8728
digraph != 8800
digraph == 8801
digraph /= 8802
digraph <= 8804
digraph >= 8805
digraph ++ 8853
digraph __ 8869

source ~/.vim/bindings.vim
source ~/.vim/autocmd.vim

" Misc
let vimclojure#SplitPos='bottom'
let g:vimclojure#DynamicHighlighting=1
let delimitMate_excluded_ft='clojure'
let g:flake8_ignore='E128'
let g:FactorRoot='/Applications/factor'
let g:haskell_conceal_enumerations=0
let g:ledger_bin='hledger'

" Neocomplete
let g:neocomplete#enable_smart_case=1
let g:neocomplete#sources#syntax#min_keyword_length=3
if !exists('g:neocomplete#sources#omni#input_patterns')
  let g:neocomplete#sources#omni#input_patterns={}
endif

" Unite
call unite#filters#matcher_default#use(['matcher_fuzzy'])
call unite#filters#sorter_default#use(['sorter_rank'])
let g:unite_source_history_yank_enable = 1
let g:unite_source_grep_encoding = 'utf-8'
let g:unite_source_grep_default_opts = '--nogroup --nocolor'
let g:unite_source_grep_recursive_opt = ''
if executable('ack-grep')
  let g:unite_source_grep_command = 'ack-grep'
  let g:unite_source_grep_default_opts = '--nogroup --nocolor -i -k -H'
  let g:unite_source_rec_async_command = 'ack-grep -f --nofilter'
elseif executable('ack')
  let g:unite_source_grep_command = 'ack'
  let g:unite_source_grep_default_opts = '--nogroup --nocolor -i -k -H'
  let g:unite_source_rec_async_command = 'ack -f --nofilter'
elseif executable('ag')
  let g:unite_source_grep_command = 'ag'
  let g:unite_source_rec_async_command = 'ag --nogroup --nocolor -g ""' " no --hidden
elseif executable('pt')
  let g:unite_source_grep_command = 'pt'
  let g:unite_source_rec_async_command = 'pt --nogroup --nocolor -g .'
endif

" Colors and lines
let g:lightline = {
      \ 'colorscheme': 'jellybeans',
      \ 'component': {
      \   'readonly': '%{&readonly?"⭤":""}',
      \ }
      \ }
set background=dark
let base16colorspace=256
execute 'colorscheme base16-'.$BASE16_SCHEME

if filereadable(expand("~/.vimrc.local"))
  source ~/.vimrc.local
endif
