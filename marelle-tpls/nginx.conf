# This came from Greg V's dotfiles:
#      https://github.com/myfreeweb/dotfiles
# Feel free to steal it, but attribution is nice
#
# thanks:
# https://willnorris.com/2014/07/webfinger-with-static-files-nginx
# https://cipherli.st/
# https://github.com/h5bp/server-configs-nginx

worker_processes  1;

events {
	worker_connections  1024;
}

http {
	include       mime.types;
	default_type  application/octet-stream;
	types {
		application/pgp-keys asc;
	}

	access_log off;
	server_tokens off;

	tcp_nopush on;
	sendfile on;
	keepalive_timeout  65;
	gzip on;
	gzip_comp_level 5;
	gzip_min_length 256;
	gzip_vary on;

	client_body_buffer_size 10K;
	client_header_buffer_size 1k;
	client_max_body_size 8m;
	large_client_header_buffers 2 1k;

	proxy_cache_path /tmp/nginx/proxy levels=1:2 keys_zone=proxy:10m inactive=15m;
	proxy_cache_key "$scheme$request_method$host$request_uri";
	proxy_cache_methods GET HEAD;
	uwsgi_cache_path /tmp/nginx/uwsgi levels=1:2 keys_zone=uwsgi:10m inactive=15m;
	uwsgi_cache_key "$scheme$request_method$host$request_uri";
	uwsgi_cache_methods GET HEAD;

	server {
		listen 80 accept_filter=httpready;
		add_header Strict-Transport-Security max-age=15768000;
		return 301 https://unrelenting.technology$request_uri;
	}

	server {
		listen       443 ssl spdy accept_filter=httpready;
		server_name  unrelenting.technology;

		ssl_certificate      /usr/local/etc/certs/bundle.pem;
		ssl_certificate_key  /usr/local/etc/certs/key.pem;
		ssl_dhparam          /usr/local/etc/certs/dhparam.pem;
		ssl_session_cache    builtin:1000 shared:SSL:10m;
		ssl_ciphers 'ECDHE-RSA-CHACHA20-POLY1305:AES256+EECDH:AES256+EDH:!aNULL';
		ssl_prefer_server_ciphers  on;
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_stapling on;
		ssl_stapling_verify on;

		spdy_keepalive_timeout 300;
		spdy_headers_comp 6;

		open_file_cache max=200 inactive=20s;
		open_file_cache_valid 30s;
		open_file_cache_min_uses 2;
		open_file_cache_errors on;

		add_header Strict-Transport-Security "max-age=15768000";
		add_header Content-Security-Policy "script-src 'self'";
		add_header X-Frame-Options "DENY";
		add_header X-Content-Type-Options "nosniff";
		add_header X-UA-Compatible "IE=Edge";
		charset utf-8;

		location /pub/ {
			add_header Access-Control-Allow-Origin "*";
			add_header Cache-Control "public, must-revalidate";
			expires 30d;
			alias /usr/home/greg/Public/;
		}

		location = /.well-known/webfinger {
			if ($request_method !~ ^(GET|HEAD)$) { return 405; }
			set_by_lua $resource 'return ngx.unescape_uri(ngx.req.get_uri_args()["resource"])';
			if ($resource = "") { return 400; }
			if ($resource = "acct:greg@unrelenting.technology")   { rewrite .* /.well-known/webfinger.json last; }
			if ($resource = "mailto:greg@unrelenting.technology") { rewrite .* /.well-known/webfinger.json last; }
			if ($resource = "http://unrelenting.technology")      { rewrite .* /.well-known/webfinger.json last; }
			if ($resource = "http://unrelenting.technology/")     { rewrite .* /.well-known/webfinger.json last; }
			if ($resource = "https://unrelenting.technology")     { rewrite .* /.well-known/webfinger.json last; }
			if ($resource = "https://unrelenting.technology/")    { rewrite .* /.well-known/webfinger.json last; }
		}

		location = /.well-known/webfinger.json {
			types { application/jrd+json json; }
			alias /usr/home/greg/Public/well-known/webfinger.json;
			add_header Access-Control-Allow-Origin "*";
		}

		location /.well-known/ {
			alias /usr/home/greg/Public/well-known/;
			add_header Access-Control-Allow-Origin "*";
		}

		location /git/ {
			include uwsgi_params;
			uwsgi_param SCRIPT_NAME /git;
			uwsgi_param SCHEME https;
			uwsgi_cache uwsgi;
			uwsgi_cache_valid 5m;
			uwsgi_modifier1 30;
			uwsgi_pass unix:/var/run/klaus/klaus.sock;
		}

		location / {
			proxy_cache proxy;
			proxy_no_cache $http_pragma $http_authorization;
			proxy_cache_valid 1m;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_hide_header "Set-Cookie";
			proxy_pass http://unix:/var/run/sweetroll/sweetroll.sock;
		}

	}

}
