# This came from Greg V's dotfiles:
#      https://github.com/myfreeweb/dotfiles
# Feel free to steal it, but attribution is nice
#
# thanks:
# https://github.com/ornicar/dotfiles/blob/master/gitconfig
# https://github.com/paulirish/dotfiles/blob/master/.gitconfig
# https://github.com/garybernhardt/dotfiles/blob/master/.githelpers
# http://blog.apiaxle.com/post/handy-git-tips-to-stop-you-getting-fired/

[core]
	excludesfile = ~/.gitignore
	whitespace = fix,space-before-tab,tab-in-indent,trailing-space
	legacyheaders = false
	quotepath = false
	pager = $PAGER
	trustctime = false
[repack]
	usedeltabaseoffset = true
[apply]
	whitespace = fix
[user]
	name = myfreeweb
	email = floatboth@me.com
[github]
	user = myfreeweb
[web]
	browser = open
[diff]
	algorithm = histogram
	renames = copy
	tool = Kaleidoscope
	wordRegex = [^[:space:]]
	mnemonicprefix = true
[mergetool "splice"]
	cmd = "vim -f $BASE $LOCAL $REMOTE $MERGED -c 'SpliceInit'"
	trustExitCode = true
[merge]
	summary = true
	tool = splice
[push]
	default = tracking
[branch]
	autosetupmerge = always
[color]
	ui = auto
	interactive = auto

[alias] # object -> verb -> option
	# common verbs: [c]reate, [l]ist, [r]eset/[r]emove
	# [b]ranch
	bc  = checkout -b
	bce = checkout --orphan
	bl  = branch --verbose
	br  = branch -d
	bR  = branch -D
	brc = rebase --continue
	brs = rebase --skip
	bs  = checkout # [s]witch
	# [c]ommit
	ca  = commit --amend
	cc  = commit
	cl  = !git log --decorate --graph --abbrev-commit --date=relative --pretty='tformat:%C(yellow)%h%Creset}%Cgreen(%ar)%Creset}%C(bold blue)<%an>%Creset}%C(red)%d%Creset %s' $* | sed -Ee 's/(^[^<]*) ago)/\\1)/' | sed -Ee 's/(^[^<]*), [[:digit:]]+ .*months?)/\\1)/' | column -t -s '}' | less -FXRS
	cp  = cherry-pick -x
	cr  = reset --hard HEAD^
	cs  = show
	# [d]iff
	d   = diff
	dc  = diff --cached
	# [f]ile
	fa  = add
	faa = !git add --all && git ws
	fap = add --patch
	fc  = !touch $@ && git add $@ && $EDITOR $1
	ff  = rm --cached # [f]orget
	fm  = mv # [m]ove
	fr  = rm
	fu  = reset HEAD #[u]nstage?
	# stas[h]
	hs  = !git stash save "snapshot: $(date)" && git stash apply "stash@{0}" # [s]napshot
	# [m]erge
	m   = merge
	mt  = mergetool
	mo  = "!f() { git checkout --ours $@ && git add $@; }; f"   # [o]urs
	mt  = "!f() { git checkout --theirs $@ && git add $@; }; f" # [t]heirs
	# [r]emote
	r   = remote
	rc  = remote add
	rco = remote add origin
	rl  = remote -v
	rr  = remote rm
	rp  = !git push $@ && git push --tags $@
	# [s]ubmodule
	sc  = submodule add
	scm = submodule foreach --recursive git checkout master
	sl  = submodule --quiet foreach --recursive echo $path  on  $(git rev-parse --abbrev-ref HEAD)
	sr  = submodulerm
	ss  = !git submodule sync && git submodule update --init --recursive # [s]ync
	su  = submodule foreach --recursive git pull # [u]pdate
	# [t]ag
	tc  = tag
	tl  = tag -n1 --list
	tr  = tag -d
	# [w]orking copy
	wr  = reset --hard HEAD
	ws  = status --short --branch --ignore-submodules=untracked

[url "git@github.com:"]
	pushInsteadOf = "git://github.com/"
[ghq]
	root = ~/src
